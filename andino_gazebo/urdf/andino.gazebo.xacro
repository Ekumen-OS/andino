<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="andino">

  <xacro:include filename="$(find andino_description)/urdf/andino.urdf.xacro"/>

  <xacro:macro name="friction" params="reference mu">
    <gazebo reference="${reference}">
      <mu1>${mu}</mu1>
      <mu2>${mu}</mu2>
      <kp>1000000.0</kp>
      <kd>1.0</kd>
      <minDepth>0.0001</minDepth>
      <maxVel>1.0</maxVel>
    </gazebo>
  </xacro:macro>

  <xacro:friction reference="front_right_wheel" mu="100"/>
  <xacro:friction reference="front_left_wheel" mu="100"/>
  <xacro:friction reference="rear_caster_wheel_link" mu="0.05"/>

   <xacro:if value="$(arg use_gazebo_ros_control)">
    <gazebo>
      <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>$(find andino_control)/config/andino_controllers.yaml</parameters>
          <!-- <robotNamespace>: The ROS namespace to be used for this instance of the plugin, defaults to robot name in URDF/SDF -->
          <!-- <controlPeriod>: The period of the controller update (in seconds), defaults to Gazebo's period -->
          <!-- <robotParam>: The location of the robot_description (URDF) on the parameter server, defaults to /robot_description' -->
          <!-- <robotSimType>: The pluginlib name of a custom robot sim interface to be used, defaults to 'DefaultRobotHWSim' -->
      </plugin>
    </gazebo>
  </xacro:if>

  <xacro:unless value="$(arg use_gazebo_ros_control)">
	  <gazebo>
    <plugin name="andino_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <!-- <namespace>/andino</namespace> -->
        <remapping>~/out:=joint_states</remapping>
        <remapping>/tf:=tf</remapping>
      </ros>
      <update_rate>10</update_rate>
      <joint_name>right_wheel_joint</joint_name> 
      <joint_name>left_wheel_joint</joint_name> 
      
    </plugin>

<plugin name='andino_diff_drive' filename='libgazebo_ros_diff_drive.so'>
      <ros>
        <!-- <namespace>/andino</namespace> -->
        <remapping>odom:=odom</remapping>
        <remapping>/tf:=tf</remapping>
      </ros>

      <!-- wheels -->
      <left_joint>right_wheel_joint</left_joint>
      <right_joint>left_wheel_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.137</wheel_separation> <!--0.2-->
      <wheel_diameter>0.035</wheel_diameter> <!--0.052-->

      <!-- limits -->
      <max_wheel_torque>5</max_wheel_torque>
      <max_wheel_acceleration>1</max_wheel_acceleration>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
    </plugin>
	  </gazebo>
  </xacro:unless>



    <gazebo reference="base_link">
      <sensor name="sensor_ray_front" type="ray">
        <pose>0.05 0 0.06 0 0 -0</pose>
        <ray>
          <scan>
            <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>12.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
        </ray>
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>20.0</update_rate>
        <plugin name="sensor_laser_front" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <!-- <namespace>/andino</namespace> -->
            <remapping>~/out:=scan</remapping>
          </ros>
          <frame_name>rplidar_laser_link</frame_name>
          <output_type>sensor_msgs/LaserScan</output_type>
        </plugin>
      </sensor>
    </gazebo>


  <!-- TODO: add the camera -->
    <gazebo reference="base_link">
        <sensor name='camera' type='camera'>
          <pose>0.085 0 0.01 0 -0 0</pose>
          <camera>
            <horizontal_fov>1.047</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.1</near>
              <far>100</far>
            </clip>
          </camera>
          <always_on>1</always_on>
          <update_rate>30</update_rate>
          <plugin name='camera_controller' filename='libgazebo_ros_camera.so'>
            <alwaysOn>1</alwaysOn>
            <cameraName>camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
            <!-- <ros>
              <namespace>andino</namespace>
            </ros> -->
          </plugin>
        </sensor>
  </gazebo>
</robot>