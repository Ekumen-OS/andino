<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- ===================== Caster xacro =========================================

  Xacro to create caster links and the respective joints. For more detail information and usage, see:
    https://github.com/pxalcantara/mobile_robot_description/wiki/Motor-xacro

  params:
  - prefix [string]: used to diferentiate the link and joint name;
  - reflect [1/-1]: value to set the side of the caster;
  - wheel_props [dictionary]: wheel properties;
  - base_props [dictionary]: base link properties;
  - mesh [string]: file name of the wheel mesh;
    - DEFAULT Value -> Empty string
-->

<!-- Caster wheel link & joint macro -->
  <!-- locationprefix locationright wheel_base_dx TODO remove -->
  <xacro:macro name="caster_wheel" 
                params="prefix reflect wheel_props locationright:=${0} scale:=''">
    <!-- caster base (fixed) -->
    <link name="${prefix}_caster_base_link">
      <xacro:box_inertia  m="${wheel_props['base']['mass']}"
                          x="${wheel_props['base']['size']['x']}"
                          y="${wheel_props['base']['size']['y']}"
                          z="${wheel_props['base']['size']['z']}"
                          o_xyz="0.0 0.0 ${-wheel_props['base']['size']['z']/2.0}"
                          o_rpy="0.0 0.0 0.0" />
      <xacro:if value="${wheel_props['base']['mesh'] != '' }" >
        <visual>
          <origin xyz="0 0 ${-wheel_props['base']['size']['z']/2.0}" rpy="0 0 0" />
          <geometry>
            <xacro:if value="${scale != '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['base']['mesh']}" scale="${scale}"/>
            </xacro:if>
            <xacro:if value="${scale == '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['base']['mesh']}" />
            </xacro:if>
          </geometry>
          <!-- xacro:insert_block name="material_silver" / TODO use this block? -->
          <material name="silver"/>
        </visual>
      </xacro:if>
      <xacro:if value="${wheel_props['base']['mesh'] == '' }" >
        <visual>
          <origin xyz="0 0 ${-wheel_props['base']['size']['z']/2.0}" rpy="0 0 0" />
          <geometry>
            <box size="${wheel_props['base']['size']['x']} ${wheel_props['base']['size']['y']} ${wheel_props['base']['size']['z']}" />
          </geometry>
          <material name="red"/>
        </visual>
      </xacro:if>
      <collision>
        <origin xyz="0 0 ${-wheel_props['base']['size']['z']/2.0}" rpy="0 0 0" />
        <geometry>
          <box size="${wheel_props['base']['size']['x']} ${wheel_props['base']['size']['y']} ${wheel_props['base']['size']['z']}" />
        </geometry>
      </collision>
    </link>
    <joint name="${prefix}_caster_base_joint" type="fixed">
      <origin xyz="${wheel_props['base']['dx']} ${-wheel_props['base']['dy'] * locationright} ${wheel_props['base']['dz']}" 
              rpy="0 0 0" />
      <parent link="base_link" />
      <child link="${prefix}_caster_base_link" />
      <axis xyz="0 0 1" />
      <dynamics damping="0.01" friction="0.0"/>
    </joint>
    <gazebo reference="${prefix}_caster_base_link">
      <material>Gazebo/Grey</material>
    </gazebo>


    <!-- caster hub -->
    <link name="${prefix}_caster_rotation_link">
      <xacro:box_inertia  m="${wheel_props['hub']['mass']}"
                          x="${wheel_props['hub']['size']['x']}"
                          y="${wheel_props['hub']['size']['y']}"
                          z="${wheel_props['hub']['size']['z']}"
                          o_xyz="0.0 0.0 ${-wheel_props['hub']['size']['z']/2.0}"
                          o_rpy="0.0 0.0 0.0" />
      <xacro:if value="${wheel_props['hub']['mesh'] != '' }" >
        <visual>
          <origin xyz="0 0 ${-wheel_props['hub']['size']['z']/2.0}" rpy="0 0 0" />
          <geometry>
            <xacro:if value="${scale != '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['hub']['mesh']}" scale="${scale}"/>
            </xacro:if>
            <xacro:if value="${scale == '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['hub']['mesh']}" />
            </xacro:if>
          </geometry>
          <!-- xacro:insert_block name="material_silver" / TODO use this block? -->
          <material name="silver"/>
        </visual>
      </xacro:if>
      <xacro:if value="${wheel_props['hub']['mesh'] == '' }" >
        <visual>
          <origin xyz="0 0 ${-wheel_props['hub']['size']['z']/2.0}" rpy="0 0 0" />
          <geometry>
            <box size="${wheel_props['hub']['size']['x']} ${wheel_props['hub']['size']['y']} ${wheel_props['hub']['size']['z']}" />
          </geometry>
          <material name="red"/>
        </visual>
      </xacro:if>
      <collision>
        <origin xyz="0 0 ${-wheel_props['hub']['size']['z']/2.0}" rpy="0 0 0" />
        <geometry>
          <box size="${wheel_props['hub']['size']['x']} ${wheel_props['hub']['size']['y']} ${wheel_props['hub']['size']['z']}" />
        </geometry>
      </collision>
    </link>
    <joint name="${prefix}_caster_rotation_joint" type="continuous">
      <origin xyz="${wheel_props['hub']['dx']} ${-wheel_props['hub']['dy'] * locationright} ${wheel_props['hub']['dz']}"
              rpy="0 0 0" />
      <parent link="base_link" />
      <child link="${prefix}_caster_rotation_link" />
      <axis xyz="0 0 1" />
      <dynamics damping="0.01" friction="0.0"/>
    </joint>
    <gazebo reference="${prefix}_caster_rotation_link">
      <material>Gazebo/Grey</material>
    </gazebo>


    <!-- caster wheel -->
    <link name="${prefix}_caster_wheel_link">
      <xacro:cylinder_inertia m="${wheel_props['wheel']['mass']}"
                              r="${wheel_props['wheel']['radius']}"
                              l="${wheel_props['wheel']['length']}">
        <!-- TODO unused block error?: origin xyz="0 0 0" rpy="${pi/2} 0 0" /-->
      </xacro:cylinder_inertia>
      <xacro:if value="${wheel_props['wheel']['mesh'] != '' }" >
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <xacro:if value="${scale != '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['wheel']['mesh']}" scale="${scale}"/>
            </xacro:if>
            <xacro:if value="${scale == '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['wheel']['mesh']}" />
            </xacro:if>
          </geometry>
          <!-- TODO use this?: xacro:insert_block name="material_dark_grey" /-->
          <material name="black"/>
        </visual>
      </xacro:if>
      <xacro:if value="${wheel_props['wheel']['mesh'] == '' }" >
        <visual>
          <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
          <geometry>
            <cylinder length="${wheel_props['wheel']['length']}" radius="${wheel_props['wheel']['radius']}" />
          </geometry>
          <material name="red"/>
        </visual>
      </xacro:if>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder length="${wheel_props['wheel']['length']}" radius="${wheel_props['wheel']['radius']}" />
        </geometry>
      </collision>
    </link>
    <joint name="${prefix}_caster_wheel_joint" type="continuous">
      <origin xyz="${wheel_props['wheel']['dx']} ${-wheel_props['wheel']['dy'] * locationright} ${wheel_props['wheel']['dz']}" 
              rpy="0 0 0" />
      <parent link="${prefix}_caster_rotation_link" />
      <child link="${prefix}_caster_wheel_link" />
      <axis xyz="0 1 0" />
    </joint>
    <gazebo reference="${prefix}_caster_wheel_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>
  </xacro:macro>

</robot>